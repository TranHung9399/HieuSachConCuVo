@model IPagedList<banSach.Models.Sach>
@using PagedList
@using PagedList.Mvc
@{
    ViewBag.Title = "Sách -" + ViewBag.Category.TenLoai;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!-- TOAST NOTIFICATIONS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<link rel="stylesheet" href="@Url.Content("~/css/phantrang.css")" />
<link rel="stylesheet" href="~/Content/css/thongbao1.css" />
<link rel="stylesheet" href="@Url.Content("~/css/bookprice.css")" />
<link rel="stylesheet" href="@Url.Content("~/css/book.css")" />
@Html.Partial("_CustomToast")
<nav class="breadcrumb mb-4" style="justify-content: flex-start; text-align: left;">
    <a class="breadcrumb-item" href="/">Trang chủ</a>
    <a class="breadcrumb-item">Danh mục</a>
    <a class="breadcrumb-item">@ViewBag.Category.TenLoai</a>
</nav>
<div class="row">
    <div class="col-md-3">
        @Html.Partial("_SidebarCategory")
    </div>
    <div class="col-md-9">
        <div class="row mb-3 align-items-center">
            <div class="col-md-8 col-6">
                <h5 class="mb-0">@ViewBag.Category.TenLoai</h5>
            </div>
            <div class="col-md-4 col-6 text-end">
                <select id="sortSelect" class="form-check-inline" style="min-width: 160px;" onchange="handleSortChange(this.value)">
                    <option value="moinhat">Mới nhất</option>
                    <option value="cunhat">Cũ nhất</option>
                    <option value="giatangdan">Giá: Tăng dần</option>
                    <option value="giagiamdan">Giá: Giảm dần</option>
                    <option value="tenaz">Tên: A-Z</option>
                    <option value="tenza">Tên: Z-A</option>
                    <option value="banchay">Bán chạy nhất</option>
                </select>
            </div>
        </div>
        <div class="row">
            @for (int i = 0; i < Model.Count; i += 4)
            {
                <div class="row mb-2">
                    @for (int j = i; j < i + 4 && j < Model.Count; j++)
                    {
                        var sach = Model[j];
                        <div class="col-xl-3 col-lg-4 col-md-4 col-12 mb-2">
                            <div class="single-product">
                                <div class="product-img">
                                    @{
                                        var phanTramGiam = (sach.GiaBan > 0 && sach.GiaChietKhau.HasValue) ?
                                            Math.Round(100M - sach.GiaChietKhau.Value * 100M / sach.GiaBan.Value) : 0;
                                    }
                                    @if (phanTramGiam > 0)
                                    {
                                        <div class="sale-badge">-@phanTramGiam.ToString("0")%</div>
                                    }
                                    <a href="@Url.Action("Details", "Book", new { id = sach.MaSach })">
                                        <div class="image-frame-product">
                                            <img class="default-img" src="~/img/sach/@sach.Hinh" alt="@sach.TenSach">
                                            <img class="hover-img" src="~/img/sach/@sach.Hinh" alt="@sach.TenSach">
                                        </div>
                                    </a>
                                    <div class="button-head">
                                        <div class="product-action">
                                            <a data-toggle="modal" data-target="#exampleModal" title="Xem thông tin" href="@Url.Action("Details", "Book", new { id = sach.MaSach })">
                                                <i class="bx bx-show"></i><span>Xem nhanh</span>
                                            </a>
                                        </div>
                                        <div class="product-action-2">
                                            <a class="btnAddCart btn btn-success px-4"
                                               data-masach="@sach.MaSach"
                                               data-url="@Url.Action("ThemGiohangAjax", "GioHang")">
                                                THÊM VÀO GIỎ
                                            </a>
                                        </div>
                                    </div>
                                </div>
                                <div class="product-content">
                                    <h3>
                                        <a href="@Url.Action("Details", "Book", new { id = sach.MaSach })" class="product-title">@sach.TenSach</a>
                                    </h3>
                                    <div class="product-price">
                                        @if (sach.SoLuongTon != 0 && sach.SoLuongTon != null)
                                        {
                                            <span class="product-original-price">@String.Format("{0:N0}đ", sach.GiaBan)</span>
                                            <span class="product-discount-price">@String.Format("{0:N0}đ", sach.GiaChietKhau)</span>
                                        }
                                        else
                                        {
                                            <span class="out-of-stock">Hết Hàng</span>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
        <div class="text-center mt-4">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { id = Request["id"], type = Request["type"], sort = Request["sort"], page }),
                new PagedListRenderOptions
                {
                    UlElementClasses = new[] { "pagination" }
                })
        </div>
    </div>
</div>


<style>
    .icon {
        font-weight: bold;
        font-size: 18px;
    }
</style>
@section Scripts {

    <script src="~/Scripts/book-common.js"></script>

    <script>
            // Function để xử lý thay đổi sort
            function handleSortChange(sortValue) {
                console.log('handleSortChange called with:', sortValue); // Debug log

                // Lấy id danh mục từ URL (nếu có)
                const urlParams = new URLSearchParams(window.location.search);
                const id = urlParams.get('id');
                const type = urlParams.get('type');

                let url = '@Url.Action("Index", "Book")';
                let params = [];

                if (id) {
                    params.push('id=' + encodeURIComponent(id));
                }
                if (type) {
                    params.push('type=' + encodeURIComponent(type));
                }
                if (sortValue) {
                    params.push('sort=' + encodeURIComponent(sortValue));
                    params.push('page=1'); // Reset về trang 1 khi sort
                }

                if (params.length > 0) {
                    url += '?' + params.join('&');
                }

                console.log('Redirecting to:', url); // Debug log
                window.location.href = url;
            }

            // Đợi DOM load xong
            document.addEventListener('DOMContentLoaded', function() {
                var sortSelect = document.getElementById('sortSelect');

                if (sortSelect) {
                    // Set lại giá trị sortSelect khi load lại trang
                    const urlParams = new URLSearchParams(window.location.search);
                    const sort = urlParams.get('sort');
                    if (sort) {
                        sortSelect.value = sort;
                        console.log('Set dropdown value to:', sort, 'Thực tế:', sortSelect.value);
                    }
                } else {
                    console.error('sortSelect element not found!'); // Debug log
                }
            });
    </script>
}

<style>
    .sale-badge {
        position: absolute;
        top: 10px;
        right: 10px;
        background: #e53935;
        color: #fff;
        font-weight: 600;
        border-radius: 50%;
        width: 48px;
        height: 48px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 16px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.15);
        z-index: 2;
    }

    .single-product {
        margin-bottom: 10px;
    }
</style>
